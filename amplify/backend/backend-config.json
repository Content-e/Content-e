{
  "api": {
    "contente": {
      "dependsOn": [
        {
          "attributes": [
            "UserPoolId"
          ],
          "category": "auth",
          "resourceName": "contente9303b093"
        }
      ],
      "output": {
        "authConfig": {
          "additionalAuthenticationProviders": [
            {
              "authenticationType": "AMAZON_COGNITO_USER_POOLS",
              "userPoolConfig": {
                "userPoolId": "authcontente9303b093"
              }
            },
            {
              "apiKeyConfig": {
                "apiKeyExpirationDate": "2024-03-23T18:15:53.243Z",
                "apiKeyExpirationDays": 365,
                "description": "API key while adding custom lambda authorizer on graphql schema fields"
              },
              "authenticationType": "API_KEY"
            }
          ],
          "defaultAuthentication": {
            "authenticationType": "AWS_LAMBDA",
            "lambdaAuthorizerConfig": {
              "lambdaFunction": "clerkAuthentication",
              "ttlSeconds": "300"
            }
          }
        }
      },
      "providerPlugin": "awscloudformation",
      "service": "AppSync"
    }
  },
  "auth": {
    "contente9303b093": {
      "customAuth": false,
      "dependsOn": [
        {
          "attributes": [
            "Arn",
            "Name"
          ],
          "category": "function",
          "resourceName": "contente9303b093PreSignup",
          "triggerProvider": "Cognito"
        }
      ],
      "frontendAuthConfig": {
        "mfaConfiguration": "OFF",
        "mfaTypes": [
          "SMS"
        ],
        "passwordProtectionSettings": {
          "passwordPolicyCharacters": [],
          "passwordPolicyMinLength": 8
        },
        "signupAttributes": [
          "EMAIL"
        ],
        "socialProviders": [],
        "usernameAttributes": [
          "EMAIL"
        ],
        "verificationMechanisms": [
          "EMAIL"
        ]
      },
      "providerPlugin": "awscloudformation",
      "service": "Cognito"
    }
  },
  "function": {
    "GPTLambda": {
      "build": true,
      "dependsOn": [],
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "clerkAuthentication": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "contente9303b093PreSignup": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "createAd": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "emailService": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "getVideoFromAuthCode": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "graphQlLambdaAuthorizerc946ef1d": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "linkTiktokAccount": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "listAdGroups": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "listCompaigns": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "updateUserType": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "validateTiktokAccess": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    }
  },
  "hosting": {
    "amplifyhosting": {
      "providerPlugin": "awscloudformation",
      "service": "amplifyhosting",
      "type": "manual"
    }
  },
  "storage": {
    "staticStorage": {
      "dependsOn": [],
      "providerPlugin": "awscloudformation",
      "service": "S3"
    }
  }
}